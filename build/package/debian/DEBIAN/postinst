#!/bin/bash

# Ensure the script is run as root
if [ "$(id -u)" -ne 0 ]; then
  echo "This script must be run as root"
  exit 1
fi

# Add overlay
dtoverlay pilot

# Update the list of modules for modprobe
depmod

# String of modules
modules="pilot pilot_io pilot_tty pilot_rtc pilot_slcd pilot_plc pilot_fpga"

# Load the modules
for module in $modules; do
    modprobe $module || { echo "Failed to load $module module"; exit 1; }
done

# Add the modules to /etc/modules so they get loaded on system startup
for module in $modules; do
    # Check if the module is already in /etc/modules
    if ! grep -qE "^${module}$" /etc/modules; then
        echo $module >> /etc/modules
    fi
done

# add config
config_start="# --- Pilot Config Start (do not modify) ---"
config_end="# --- Pilot Config End (do not modify) ---"

all_start="[all]"
pi4_start="[pi4]"

all_config="dtparam=spi=on
dtparam=i2c_arm=on
dtoverlay=pi3-miniuart-bt
dtoverlay=pilot
enable_uart=1
core_freq=250
init_uart_clock=48000000"

pi4_config="dtoverlay=uart2
dtoverlay=uart5"

# Escape special characters for sed
escaped_start=$(printf '%s\n' "$config_start" | sed 's:[][\\/.^$*]:\\&:g')
escaped_end=$(printf '%s\n' "$config_end" | sed 's:[][\\/.^$*]:\\&:g')

# Remove blocks with markers
while grep -Fq "$config_start" /boot/config.txt; do
    sed -i "/$escaped_start/,/$escaped_end/d" /boot/config.txt
done

# Function to append config
append_config() {
    local block_start="$1"
    local config="$2"
    local temp_file="/tmp/config_temp.txt"
    local last_section_line=-1
    local current_line_number=0

    # Create a temp file
    rm -f $temp_file
    touch $temp_file

    # First pass: Find the last occurrence of the section
    while IFS= read -r line; do
        ((current_line_number++))
        if [[ "$line" == "$block_start" ]]; then
            last_section_line=$current_line_number
        fi
    done < /boot/config.txt

    current_line_number=0
    done < /boot/config.txt

    current_line_number=0

    # Second pass: Write to temp file, add the config to the last occurrence of t he section
    while IFS= read -r line; do
        ((current_line_number++))

        if [[ "$line" == "$block_start" && $current_line_number -eq $last_section_line ]]; then
            echo "$line" >> $temp_file
            echo "$config_start" >> $temp_file
            echo "$config" >> $temp_file
            echo "$config_end" >> $temp_file
        else
            echo "$line" >> $temp_file
        fi
    done < /boot/config.txt

    # If no section was found, append at the end
    if [[ $last_section_line -eq -1 ]]; then
        echo "$block_start" >> $temp_file
        echo "$config_start" >> $temp_file
        echo "$config" >> $temp_file
        echo "$config_end" >> $temp_file
    fi

    # Overwrite original with temp
    mv $temp_file /boot/config.txt
}

# Append configurations
append_config "$all_start" "$all_config"
append_config "$pi4_start" "$pi4_config"

# remove console from cmdline
if grep -q "console=serial0," /boot/cmdline.txt; then
    sed -i -e "s/console=serial0,[0-9]\+ //g" /boot/cmdline.txt
fi

if grep -q "console=ttyAMA0," /boot/cmdline.txt; then
    sed -i -e "s/console=ttyAMA0,[0-9]\+ //g" /boot/cmdline.txt
fi


# generate plc var loader
#
# Set execute permission only if not already set
if [ ! -x /etc/init.d/pilot-config ]; then
    chmod +x /etc/init.d/pilot-config
fi

# Create symbolic link only if it doesn't exist
if [ ! -L /etc/rc3.d/S01pilot-config ]; then
    ln -rs /etc/init.d/pilot-config /etc/rc3.d/S01pilot-config
fi
